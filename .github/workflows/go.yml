name: Go
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: false
      - name: Install dependencies
        run: go mod tidy
      - name: Format
        run: gofmt -w $(git ls-files '*.go')
      - name: Vet
        run: go vet ./...
      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.55
          args: --timeout=5m
          only-new-issues: true
      - name: Test
        run: go test -coverprofile=coverage.txt ./...
      - name: Archive coverage
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: coverage.txt

  coverage:
    if: github.event_name == 'pull_request'
    needs: unit_tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      pull-requests: write
    steps:
      - uses: fgrosse/go-coverage-report@v1.2.0
        with:
          coverage-artifact-name: code-coverage
          coverage-file-name: coverage.txt
          skip-comment: ${{ github.event_name != 'pull_request' }}
        continue-on-error: true
